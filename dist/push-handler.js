self.addEventListener("push",(e=>{let i;console.log("Service Worker (push-handler.js): Push Diterima.");try{i=e.data.json(),console.log("Service Worker: Data push (JSON):",i)}catch(o){i={title:"Notifikasi Baru",body:e.data.text()},console.log("Service Worker: Data push (text):",i.body)}const o=i.title||"Aplikasi CeritaKita",n={body:i.body||"Anda memiliki pesan baru.",icon:i.icon||"assets/images/icon-192x192.png",badge:i.badge||"assets/images/badge-72x72.png",image:i.image,data:{url:i.url||"/"},actions:i.actions||[]};e.waitUntil(self.registration.showNotification(o,n).then((()=>console.log("Service Worker: Notifikasi ditampilkan."))).catch((e=>console.error("Service Worker: Gagal menampilkan notifikasi:",e))))})),self.addEventListener("notificationclick",(e=>{console.log("Service Worker (push-handler.js): Notifikasi diklik."),e.notification.close();const i=e.notification.data.url||"/";console.log("Service Worker: Mencoba membuka URL:",i),e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then((e=>{for(const o of e)if((o.url===i||"/"===i&&o.url.endsWith("/index.html"))&&"focus"in o)return console.log("Service Worker: Menemukan client yang cocok, fokus."),o.focus();if(clients.openWindow)return console.log("Service Worker: Membuka window baru."),clients.openWindow(i);console.log("Service Worker: Tidak bisa membuka window.")})))}));